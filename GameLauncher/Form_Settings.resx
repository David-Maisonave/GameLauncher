<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="textBox_EmulatorsBasePath.ToolTip" xml:space="preserve">
    <value>This is the base directory where all the emulators are stored. Changing this can trigger a full ROM rescan.
To enter multiple paths, separate each path with semicolon.
Example: C:\Games;C:\Emulators;C:\Retro\Nintendo</value>
  </data>
  <data name="checkBox_EnableRomChecksum.ToolTip" xml:space="preserve">
    <value>When checked, performs a checksum value to all ROM's before adding them to the database.
Change only applies to new full scan.
Warning: When enable, this will increase the time it takes to do a full scan when initializing the GameLauncher database.
</value>
  </data>
  <data name="groupBox_Checksum.ToolTip" xml:space="preserve">
    <value>All checksum options only apply when performing a new/full scan!!!

Warning:
When any of these options are enable, it will increase the time it takes to do a full scan when initializing the GameLauncher database.

</value>
  </data>
  <data name="checkBox_SHA256OverMD5.ToolTip" xml:space="preserve">
    <value>When checked, performs an SHA256 instead of MD5 for checksum.
SHA256 is more accurate than MD5, but it takes longer to perform durring initialization.
SHA256 also takes more space in the GameLauncher database.</value>
  </data>
  <data name="textBox_ValidRomFileExtensions.ToolTip" xml:space="preserve">
    <value>A list of valid ROM's file extensions used when initailizing datbase or when compressing files.
The list must be comma separated, and must have at least two entries.
If this list is less than 6 characters, it will get reset to default value.
Example entry:
bin,n64,gba,iso,gb,smc,nds,rom</value>
  </data>
  <data name="checkBox_ConvertImageFilesToJpg.ToolTip" xml:space="preserve">
    <value>When enabled, converts PNG and BMP files to JPG when scanning for new image files.
Generally, JPG files take less space than PNG and BMP files, but this is at the cost of image quality.
For many files, the image quality difference is not worth the extra space used.

If image quality is more important, leave this option DISABLED.
If file system storage space is more important, consider enabling this option and enabling the 'Delete Old Image' option.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALYuUwGzKEYEtihDAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADKPmgBzkJsAgAA
        AADDM1IBvi9MAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAph49AQAA
        AACqJEcNrCE+ZbAjPSoAAAAAsCM+AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////////////x////8f///+D////g////
        wH/8f4B/+A4Af/gAAD/8AAA//AAAP/4AAD//AAB//4AA///AA///4B////j/////////////////////
        //////////////////////////////////8=
</value>
  </data>
</root>